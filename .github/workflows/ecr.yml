"jobs":
  "build":
    "name": "Build Image"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Configure AWS credentials"
      "uses": "aws-actions/configure-aws-credentials@v1"
      "with":
        "aws-access-key-id": "${{ secrets.AWS_ACCESS_KEY_ID }}"
        "aws-region": "eu-central-1"
        "aws-secret-access-key": "${{ secrets.AWS_ACCESS_KEY_SECRET }}"
    - "id": "login-ecr"
      "name": "Login to Amazon ECR"
      "uses": "aws-actions/amazon-ecr-login@v1"
    - "name": "Check out code"
      "uses": "actions/checkout@v2"
    - "env":
        "IMAGE_NAME": "${ steps.login-ecr.outputs.registry }/cobudget-backend"
      "name": "Configure Java"
      "run": "./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=$IMAGE_NAME"
      "uses": "actions/setup-java@v3"
      "with":
        "distribution": "adopt"
        "java-version": 17
    - "env":
        "ECR_REGISTRY": "${ steps.login-ecr.outputs.registry }"
        "ECR_REPOSITORY": "cobudget-backend"
        "IMAGE_TAG": "latest"
      "name": "Build, tag, and push image to Amazon ECR"
      "run": |2
                    docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                    docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
"name": "Deploy to ECR"
"on":
  "push":
    "branches":
    - "main"
